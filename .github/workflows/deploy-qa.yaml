name: Build & Push Saleor-Payment

on:
  push:
    branches:
      - qa

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Branch Prefix
        run: echo "BRANCH_PREFIX=$(echo $GITHUB_REF_NAME | cut -d "-" -f-2)" >> $GITHUB_ENV

      - name: Set Env Branch
        run: |
          if [ ${{ env.BRANCH_PREFIX }} == 'development' ]; then
            echo "DEST_BRANCH=deploy-develop" >> $GITHUB_ENV
            echo "DEST_REGION=eu-west-2" >> $GITHUB_ENV
          elif [ ${{ env.BRANCH_PREFIX }} == 'qa' ]; then
            echo "DEST_BRANCH=qa" >> $GITHUB_ENV
            echo "DEST_REGION=eu-west-2" >> $GITHUB_ENV
          elif [ ${{ env.BRANCH_PREFIX }} == 'deploy-prod' ]; then
            echo "DEST_BRANCH=deploy-prod" >> $GITHUB_ENV
            echo "DEST_REGION=eu-west-2" >> $GITHUB_ENV
          else
            echo "Not a valid environment"
            exit 1;
          fi

      - name: Get Repository Name
        run: |
          REPO_NAME="${{ github.repository }}"
          echo "REPO_NAME=${REPO_NAME#*/}" >> $GITHUB_ENV

      - name: Render Deployment YAML
        uses: nowactions/envsubst@v1
        with:
          input: ./.env.sample
          output: ./.env
        env:
          SALEOR_API_URL: ${{ secrets.SALEOR_API_URL_DEVELOP }}
          SECRET_KEY: ${{ secrets.SECRET_KEY_DEVELOP }}

      - name: Checkout Forge Manifest Repo
        uses: actions/checkout@v3
        with:
          repository: Simple-Online-Healthcare/forge_k8s_manifests
          path: ./forge_k8s_manifests
          ref: ${{ env.DEST_BRANCH }}
          token: ${{ secrets.SOP_REPO_PAT }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR for Saleor Backend.
        id: image_build
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: saleor-payment-staging
          IMAGE_TAG: ${{github.run_number}}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f dockerfiles/qa.Dockerfile .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          sed -i "s/newTag:.*$/newTag:\ '$IMAGE_TAG'/" ./forge_k8s_manifests/deployments/apps/${{ env.REPO_NAME }}/kustomization.yaml

      - name: Deploy latests
        run: |
          cd forge_k8s_manifests
          git config --global user.email "pravakar.kumar@simpleonlinehealthcare.com"
          git config --global user.name "pravakar2024"
          git add deployments/apps/${{ env.REPO_NAME }}/kustomization.yaml
          git commit -m "Deploying latest image"
          parallel --retries 10 --delay 3 ::: "git pull --rebase && git push origin ${{ env.DEST_BRANCH }} --force"
